steps:
  - id: pull-for-cache
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker pull gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest || exit 0

  - id: build
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:$SHORT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest'
      - '--cache-from'
      - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest'
      - '.'

  - id: image-push
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest'
    waitFor: ['build']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'gadget-${_ENV}-backend-java'
      - '--image'
      - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--memory'
      - '1024Mi'
      - '--max-instances'
      - '10'
      - '--concurrency'
      - '4'
      - '--vpc-connector'
      - 'projects/edex-staging/locations/europe-west1/connectors/vpceuwest1'
      - '--port'
      - '8080'
      - '--allow-unauthenticated'
      - '--ingress'
      - 'all'
      - '--set-cloudsql-instances'
      - 'edex-staging:europe-west1:crowdfunding'
      - '--tag'
      - 'dev'
    waitFor: ['image-push']

images:
  - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/$TRIGGER_NAME:latest'

timeout: 1500s
